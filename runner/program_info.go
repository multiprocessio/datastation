package runner

// GENERATED BY ./runner/scripts/generate_program_type_info.sh. DO NOT MODIFY.

var packedProgramTypeInfo = map[SupportedLanguages]string{
	"javascript": `{"id":"javascript","preamble":"function DM_getPanelFile(i){ return '$$RESULTS_FILE$$'+$$JSON_ID_MAP$$[i];}\nfunction DM_getPanel(i) {\n  const fs = require('fs');\n  return JSON.parse(fs.readFileSync('$$RESULTS_FILE$$'+$$JSON_ID_MAP$$[i]));\n}\nfunction DM_setPanel(v) {\n  const fs = require('fs');\n  const fd = fs.openSync('$$PANEL_RESULTS_FILE$$', 'w');\n  if (Array.isArray(v)) {\n    fs.writeSync(fd, '[');\n    for (let i = 0; i < v.length; i++) {\n      const row = v[i];\n      let rowJSON = JSON.stringify(row);\n      if (i < v.length - 1) {\n        rowJSON += ',';\n      }\n      fs.writeSync(fd, rowJSON);\n    }\n    fs.writeSync(fd, ']');\n  } else {\n    fs.writeSync(fd, JSON.stringify(v));\n  }\n}","defaultPath":"node","name":"JavaScript"}`,
	"julia":      `{"id":"julia","name":"Julia","defaultPath":"julia","preamble":"\ntry\n    import JSON\ncatch e\n    import Pkg\n    Pkg.add(\"JSON\")\n    import JSON\nend\nfunction DM_getPanel(i)\n  panelId = JSON.parse(\"$$JSON_ID_MAP_QUOTE_ESCAPED$$\")[string(i)]\n  JSON.parsefile(string(\"$$RESULTS_FILE$$\", panelId))\nend\nfunction DM_setPanel(v)\n  open(\"$$PANEL_RESULTS_FILE$$\", \"w\") do f\n    JSON.print(f, v)\n  end\nend\nfunction DM_getPanelFile(i)\n  string(\"$$RESULTS_FILE$$\", JSON.parse(\"$$JSON_ID_MAP_QUOTE_ESCAPED$$\")[string(i)])\nend"}`,
	"python":     `{"id":"python","name":"Python","defaultPath":"python3","preamble":"def DM_getPanelFile(i):\n  return r'$$RESULTS_FILE$$'+$$JSON_ID_MAP$$[str(i)]\ndef DM_getPanel(i):\n  import json\n  with open(r'$$RESULTS_FILE$$'+$$JSON_ID_MAP$$[str(i)]) as f:\n    return json.load(f)\ndef DM_setPanel(v):\n  import json\n  with open(r'$$PANEL_RESULTS_FILE$$', 'w') as f:\n    json.dump(v, f)"}`,
	"r":          `{"id":"r","name":"R","defaultPath":"Rscript","preamble":"\ntryCatch(library(\"rjson\"), error=function(cond) {install.packages(\"rjson\", repos=\"https://cloud.r-project.org\")}, finally=library(\"rjson\"))\nDM_getPanel <- function(i) {\n  panelId = fromJSON(\"$$JSON_ID_MAP_QUOTE_ESCAPED$$\")[[toString(i)]]\n  fromJSON(file=paste(\"$$RESULTS_FILE$$\", panelId, sep=\"\"))\n}\nDM_setPanel <- function(v) {\n  write(toJSON(v), \"$$PANEL_RESULTS_FILE$$\")\n}\nDM_getPanelFile <- function(i) {\n  paste(\"$$RESULTS_FILE$$\", fromJSON(\"$$JSON_ID_MAP_QUOTE_ESCAPED$$\")[[toString(i)]], sep=\"\")\n}\n"}`,
	"ruby":       `{"id":"ruby","name":"Ruby","defaultPath":"ruby","preamble":"\ndef DM_getPanel(i)\n  require 'json'\n  JSON.parse(File.read('$$RESULTS_FILE$$' + JSON.parse('$$JSON_ID_MAP$$')[i.to_s]))\nend\ndef DM_setPanel(v)\n  require 'json'\n  File.write('$$PANEL_RESULTS_FILE$$', v.to_json)\nend\ndef DM_getPanelFile(i)\n  require 'json'\n  '$$RESULTS_FILE$$' + JSON.parse('$$JSON_ID_MAP$$')[i.to_s]\nend\n"}`,
}
