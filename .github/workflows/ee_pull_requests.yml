name: Run EE tests

on:
  pull_request:
    branches: [main]

jobs:
  ee_linux_tests:
    name: "[EE] Linux Tests"
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ee

    steps:
    - uses: actions/checkout@master
      with:
        ref: ${{ github.ref }}

    # FROM: https://github.com/actions/cache/blob/main/examples.md#node---yarn
    - name: Get yarn cache directory path
      id: yarn-cache-dir-path
      run: echo "::set-output name=dir::$(yarn cache dir)"

    - uses: actions/cache@v2
      id: yarn-cache # use this to check for `cache-hit` (`steps.yarn-cache.outputs.cache-hit != 'true'`)
      with:
        path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
        key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
        restore-keys: |
          ${{ runner.os }}-yarn-

    - run: cd .. && ./scripts/ci/prepare_linux.sh --integration-tests
    - run: cd .. && yarn
    - run: yarn
    - run: yarn format
    - run: yarn tsc
    - run: cd .. && ./scripts/fail_on_diff.sh
    - run: ./scripts/require_copyright.sh
    - run: yarn test

#
# WHILE THIS CODE ISNT UNDER ACTIVE DEVELOPMENT LETS DO A MINIMUM OF TESTS ON IT.
#

  # ee_macos_tests:
  #   name: "[EE] macOS Tests"
  #   runs-on: macos-latest

  #   steps:
  #   - uses: actions/checkout@master
  #     with:
  #       ref: ${{ github.ref }}

  #   # FROM: https://github.com/actions/cache/blob/main/examples.md#node---yarn
  #   - name: Get yarn cache directory path
  #     id: yarn-cache-dir-path
  #     run: echo "::set-output name=dir::$(yarn cache dir)"

  #   - uses: actions/cache@v2
  #     id: yarn-cache # use this to check for `cache-hit` (`steps.yarn-cache.outputs.cache-hit != 'true'`)
  #     with:
  #       path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
  #       key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
  #       restore-keys: |
  #         ${{ runner.os }}-yarn-

  #   - run: ./scripts/ci/prepare_macos.sh
  #   - run: yarn
  #     working-directory: ee
  #   - run: yarn test
  #     working-directory: ee

  # ee_windows_tests:
  #   name: "[EE] Windows Tests"
  #   runs-on: windows-latest

  #   steps:
  #   - uses: actions/checkout@master
  #     with:
  #       ref: ${{ github.ref }}

  #   - run: ./scripts/ci/prepare_windows.ps1
  #     shell: pwsh
  #   - run: yarn
  #     working-directory: ee
  #   - run: yarn test
  #     working-directory: ee
