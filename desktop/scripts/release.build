rm -rf build
yarn
setenv UI_ESBUILD_ARGS "--minify"
yarn build-desktop
prepend "window.DS_CONFIG_MODE='desktop';" build/ui.js
prepend "window.DS_CONFIG_VERSION='{arg0}';" build/ui.js
prepend "window.DS_CONFIG_VERSION='{arg0}';" build/desktop_runner.js
prepend "global.DS_CONFIG_VERSION='{arg0}';" build/desktop.js
cp icon.png build/icon.png
cp icon.ico build/icon.ico
cp icon.icns build/icon.icns

# Clean stuff up
rm -rf coverage
rm -rf node_modules/canvas
rm -rf node_modules/xlsx
rm -rf node_modules/papaparse
rm -rf node_modules/express
rm -rf node_modules/express-session
rm -rf node_modules/nodemailer
rm -rf node_modules/openid-client
rm -rf node_modules/@dsnp
rm -rf node_modules/cookie-parser
rm -rf node_modules/chart.js
rm -rf node_modules/ace-builds
rm -rf node_modules/js-yaml
rm -rf node_modules/node-fetch
rm -rf node_modules/passport
rm -rf node_modules/pg
rm -rf node_modules/react
rm -rf node_modules/react-ace
rm -rf node_modules/react-dom
rm -rf node_modules/react-syntax-highlighter
rm -rf certs
rm -rf *.md
rm -rf *.yml
rm -rf server
rm -rf scripts
rm -rf testdata
rm -rf type-overrides
rm -rf *.png
rm -rf TAGS
rm -rf e2e
rm -rf Dockerfile
rm -rf dsq
rm -rf *.js
rm -rf tsconfig.json
rm -rf yarn.lock
rm -rf runner

# Build and package
yarn electron-packager --ignore=build/go_desktop_runner --ignore=releases --asar --overwrite --icon=build/icon.png --out=releases --build-version={arg0} --app-version={arg0} . "DataStation Community Edition"
zip -9 -r releases/datastation-{os}-{arch}-{arg0}.zip "releases/DataStation Community Edition-{os}-{arch}"